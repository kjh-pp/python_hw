print()
'''
# 제어문

# 분기문(조건문) : 대부분의 프로그램은 사용자에게 선택을 요구함. 이 때 사용하는 것이 if 조건문

# if문 기본 구조
if 조건 : 
    수행할 문장 1
    수행할 문장 2
    .
    .

# if 역할 : 조건이 true일 때만 실행하는 코드를 만드는 것

# 파이썬 if문
if 조건 : 
    코드블록 
'''

people = 1

if people == 1 :
    print('사람이 한명 있습니다')

print('---------------------------')

if people == 1 :
    print('사람이 한명 있습니다')
    print('사람이 두명 있을지도 모름')


'''
파이썬 코드는 들여쓰기가 아주 중요!! 들여쓰기를 통해 코드블록을 구분하기 때문
들여쓰기는 tab 또는 스페이스바 4칸을 사용가능
둘 중 아무거나 가능 - 스페이스바 4칸 권장
(tab, space 혼용해서 사용은 안됨)
'''
print('---------------------------')

# 조건 true/false 로 구분 - 구분시 연산자(비교/논리) 사용~
# 비교 연산자 : > , < , >= , <= , ==, !=
# 논리 연산자 : and, or, not

x = 3
y = 2
if x != y :
    print('x와 y는 같지 않다')

print('---------------------------')
'''
> 블록
 - 콜론(:) 다음에 들여쓴 코드 블록
 - 같은 실행 흐름에서 순서대로 실행되는 코드 덩어리
 - 여러 줄로 작성 가능. 단, 여러 줄일 경우 들여쓰기 칸 수는 모두 동일할 것
'''

if True :
    print('블록')
    print('같은 블록 - 같은 실행환경')
    print('여러 줄 가능')
    
'''
블록을 끝내려면? 들여쓰기를 끝내야함 --> 내어쓰기
한 번이라도 내어 쓴 블록은 끝난 블록이 되고, 다시 열 수 없음
'''
print('==============IF문 END===============')
print('바깥쪽에서 새로 시작하는 코드')

# 블록 안에는 또 다른 블록이 들어갈 수 있음(중첩)
if True :
    print('첫번째 코드 블록 start')
    
    if False :
        print('실행되지 않을 코드')
    if True :
        print('첫번째 코드 블록 - 안쪽 코드 블록')
    print('첫번째 코드 블록 end')
print('바깥 코드')

print('=======================================')
print('바깥쪽에서 새로 시작하는 코드')

# 블록 안에는 또 다른 블록이 들어갈 수 있음(중첩)
if False:
    print('첫번째 코드 블록 start')

    if False:
        print('실행되지 않을 코드')
    if True:
        print('첫번째 코드 블록 - 안쪽 코드 블록')
    print('첫번째 코드 블록 end')
print('바깥 코드')